.\" Text automatically generated by txt2man
.TH bootstrap 1 "18 February 2016" "" "Holman does dotfiles"
.SH NAME
\fBbootstrap \fP-- Manage dotfiles in a repository.
\fB
.SH SYNOPSIS
.nf
.fam C
\fBbootstrap\fP [\fB-a\fP <altname>] [\fB-l\fP | \fB-h\fP]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBbootstrap\fP is a tool for managing a collection of files across multiple
computers, using a shared, topic-centric repository.
In addition, \fBbootstrap\fP provides a feature to select alternate versions of files
based on the operating system or host name.
.PP
The following options are available:
.TP
.B
\fB-a\fP altname
Use the alternate filename scheme <altname>.  For example,
.PP
.nf
.fam C
                      script/bootstrap -a yadm

.fam T
.fi
.RS
Normally, you should not mix naming conventions within the
same repository, so passing an alternative naming scheme on the
command line is useful mainly for testing purposes.
.RE
.TP
.B
\fB-l\fP
Run only the linking part of the bootstrapping process.
Useful for updating the symbolic links, after adding a new
configuration file to the repository.
.TP
.B
\fB-h\fP
This message.
.SH ALTERNATES
When managing a set of files across different systems, it can be useful to have
an automated way of choosing an alternate version of a file for a different
operating system, host, or user.
\fBbootstrap\fP will automatically create a symbolic link to
the appropriate version of a file, as long as you follow a specific naming
convention.
\fBbootstrap\fP can detect files with names ending in:
.PP
.RS
.BR .symlink " or " .symlink__OS " or " .symlink__OS.HOSTNAME " or ".symlink__OS.HOSTNAME.USER
.RE
.PP
(If it is hard to see, those are double underscores.)
If there are any files in a repository managed by \fBbootstrap\fP which match this
naming convention, symbolic links will be created for the most appropriate
version.
This may best be demonstrated by example. Assume the following files in a
repository are managed by \fBbootstrap\fP:
.PP
.nf
.fam C
  \- $HOME/.dotfiles/example.txt.symlink
  \- $HOME/.dotfiles/example.txt.symlink__Darwin
  \- $HOME/.dotfiles/example.txt.symlink__Darwin.host1
  \- $HOME/.dotfiles/example.txt.symlink__Darwin.host2
  \- $HOME/.dotfiles/example.txt.symlink__Linux
  \- $HOME/.dotfiles/example.txt.symlink__Linux.host1
  \- $HOME/.dotfiles/example.txt.symlink__Linux.host2

.fam T
.fi
If running on a Macbook named "host2", \fBbootstrap\fP will create a symbolic link
which looks like this:
.PP
.IR $HOME/.example.txt " -> " $HOME/.dotfiles/example.txt.symlink__Darwin.host2
.PP
However, on another Mackbook named "host3", \fBbootstrap\fP will create a symbolic
link which looks like this:
.PP
.IR $HOME/.example.txt " -> " $HOME/.dotfiles/example.txt.symlink__Darwin
.PP
Since the hostname doesn't match any of the managed files, the more generic
version is chosen.
.PP
If running on a Linux server named "host4", the link will be:
.PP
.IR $HOME/.example.txt " -> " $HOME/.dotfiles/example.txt.symlink__Linux
.PP
If running on a Solaris server, the link uses the default ".symlink" version:
.PP
.IR $HOME/.example.txt " -> " $HOME/.dotfiles/example.txt.symlink
.PP
If no ".symlink" version exists and no files match the current OS/HOSTNAME/USER, then no link will be created.
.PP
OS is determined by running \fBuname\fP(1)\ \fB-s\fP, HOSTNAME by running \fBhostname\fP(1)\ \fB-s\fP,
and USER by running \fBid\fP(1)\ \fB-u\fP\ \fB-n\fP.
.SH YADM NAMING COMPATIBILITY
\fBbootstrap\fP also accepts the naming convention used by \fByadm\fP(1):
.PP
.RS
.BR ## " or " ##OS " or " ##OS.HOSTNAME " or " ##OS.HOSTNAME.USER
.RE
.PP
So we can have:
.PP
.nf
.fam C
  \- $HOME/.dotfiles/example.txt##
  \- $HOME/.dotfiles/example.txt##Darwin
  \- $HOME/.dotfiles/example.txt##Darwin.host1
  \- $HOME/.dotfiles/example.txt##Darwin.host2
  \- $HOME/.dotfiles/example.tx##Linux
  \- $HOME/.dotfiles/example.txt##Linux.host1
  \- $HOME/.dotfiles/example.txt##Linux.host2

.fam T
.fi
To enable the yadm naming convention, edit the \fBbootstrap\fP script by changing 
\(cqaltname="default"' to 'altname="yadm" at the beginning of the \fBbootstrap\fP script.
.PP
The only (minor) advantage of yadm naming is that it allows for shorter
filenames.
.SH TECHNICAL NOTE
Why use (double) underscores for the (default) filename scheme, and not, for
example two hashes like the yadm convention? The reason is that such a format
would look too much like the yadm format and will confuse \fBbootstrap\fP. That is,
if the default would be:
.PP
.nf
.fam C
  \- $HOME/.dotfiles/example.symlink##Darwin

.fam T
.fi
but you run \fBbootstrap\fP in yadm compatibility mode, then after stripping the end
of the filename there is a link to:
.PP
.nf
.fam C
  \-> $HOME/.dotfiles/example.symlink##Darwin

.fam T
.fi
instead of:
.PP
.nf
.fam C
  \-> $HOME/.dotfiles/example##Darwin

.fam T
.fi
The latter is most likely what you wanted, especially if the files are
different.
.PP
So, don't mix naming schemes in the same repository, but if for some reason you
would like to, and you create custom name formats, then make sure the namings
are sufficiently different from one another.
.SH AUTHOR
The ALTERNATES feature is inspired by \fByadm\fP(1), and its section in this manual is
taken, and slighty modified, from the yadm manpage.
.SH SEE ALSO
Holman does dotfiles: https://github.com/holman/dotfiles.git
.PP
yadm: https://github.com/TheLocehiliosan/yadm
