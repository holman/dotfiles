" Install vim-plug if not installed
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-surround'
Plug 'kien/ctrlp.vim'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-bundler'
Plug 'bling/vim-airline'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'vim-ruby/vim-ruby'
Plug 'valloric/youcompleteme'
Plug 'pangloss/vim-javascript'
Plug 'tyrannicaltoucan/vim-deep-space'
Plug 'rking/ag.vim'
Plug 'tpope/vim-endwise'
Plug 'tomtom/tcomment_vim'
call plug#end()

set noswapfile

" Wrap gitcommit file types at the appropriate length
filetype indent plugin on

set background=dark

if filereadable(expand("$HOME/.vim/plugged/vim-deep-space/colors/deep-space.vim"))
  colorscheme deep-space
  let g:airline_theme='deep_space'
endif

"  ---------------------------------------------------
"  TEXT FORMATTING
"  ---------------------------------------------------
set autoindent             " automatic indent new lines
set smartindent            " be smart about it
inoremap # X<BS>#
set nowrap                 " do not wrap lines
set softtabstop=2          " yep, two
set shiftwidth=2           " ..
set tabstop=2
set expandtab              " expand tabs to spaces
set nosmarttab             " no tabs
set formatoptions+=n       " support for numbered/bullet lists
set textwidth=80           " wrap at 80 chars by default
set virtualedit=block      " allow virtual edit in visual block ..
set mouse=a                " enable mouse in term"

"  ----------------------------------------------------
"  REMAPPING
"  ----------------------------------------------------
" , as leader
let mapleader = ','

" exit to normal mode with jj
inoremap jj <ESC>

" map NERDTreeToggle to nn
noremap <Leader>nn :NERDTreeToggle<cr>

" reload vim <Leader>s
map <leader>s :source ~/.vimrc<CR>

" Movement around panes CTRL-<letter>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

nnoremap <Leader><Leader> :e#<CR> " Reopen last file
nnoremap <Leader>w :w<CR> " <Leader>w will save
nnoremap <Leader>qc :ccl<CR> " close quick fix window


set ruler                  " show the cursor position all the time
set noshowcmd              " don't display incomplete commands
set nolazyredraw           " turn off lazy redraw
set number                 " line numbers
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set ch=2                   " command line height
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling


set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
set nohlsearch             " don't highlight searches
set visualbell             " shut up

autocmd BufWritePre * :%s/\s\+$//e

syntax on

autocmd vimenter * if !argc() | NERDTree | endif
nmap <silent> <C-D> :NERDTreeToggle<CR>

" ------- PLUGIN CONFIGS ------- "

" NERDTREE
let NERDTreeShowHidden=1
let NERDTreeIgnore=['\.DS_Store', '\~$', '\.swp']
let NERDTreeQuitOnOpen=1

" CTRL-P"
nnoremap <silent> ,t :CtrlP<CR>
nnoremap <silent> ,b :CtrlPBuffer<CR>
let g:ctrlp_by_filename = 1
let g:ctrlp_switch_buffer = 0
if exists("g:ctrlp_user_command")
  unlet g:ctrlp_user_command
endif
if executable('ag')
  "Use ag in CtrlP for listing files. Lightning fast and respects
  ".gitignore
  let g:ctrlp_user_command =
        \ 'ag %s --files-with-matches -g "" --ignore "\.git$\|\.hg$\|\.svn$"'
  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
else
  " Fall back to using git ls-files if Ag is not available
  let g:ctrlp_custom_ignore = '\.git$\|\.hg$\|\.svn$'
  let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files .  --cached --exclude-standard --others']
endif

" MAPPINGS FOR RAILS APPS "
map ,ja :CtrlP app/assets<CR>
map ,jm :CtrlP app/models<CR>
map ,jc :CtrlP app/controllers<CR>
map ,jv :CtrlP app/views<CR>
map ,jh :CtrlP app/helpers<CR>
map ,js :CtrlP app/services<CR>
map ,jL :CtrlP lib<CR>
map ,jp :CtrlP public<CR>
map ,jS :CtrlP spec<CR>
map ,jD :CtrlP db<CR>
map ,jC :CtrlP config<CR>
map ,jV :CtrlP vendor<CR>
map ,jF :CtrlP factories<CR>
map ,jT :CtrlP test<CR>


" Easier rails movement
nnoremap ,vv :Eview<cr>
nnoremap ,cc :Econtroller<cr>

" Easier window splits
nnoremap <silent> vv <C-w>v
nnoremap <silent> ss <C-w>s

"Clear current search highlight by double tapping //
nmap <silent> // :nohlsearch<CR>

" Type ,hl to toggle highlighting on/off, and show current value.
noremap ,hl :set hlsearch! hlsearch?<CR>



let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
