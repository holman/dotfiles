# shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles

# $ZSH variable is deprecated, use $DOTFILES instead
export ZSH="$DOTFILES"

# your project folder that we can `c [tab]` to
export PROJECTS=~/Code

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# Oh My Zsh could be installed somewhere out of dotfiles directory tree, e.g.
# into  ~/.oh-my-zsh; the configuration file created by Oh My Zsh installer
# should be moved as follows: {.zshrc => $DOTFILES/zsh/oh-my-zshrc}.
if [[ -f $DOTFILES/zsh/oh-my-zshrc ]]; then
  () {
    local ZSH="$HOME/.oh-my-zsh"
    source $DOTFILES/zsh/oh-my-zshrc
    export OHMYZSH="$ZSH"
  }
else
  # initialize autocomplete here, otherwise functions won't be loaded
  autoload -U compinit
  compinit
fi

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Notify existing users that they should migrate to another variable.
export ZSH='$ZSH is deprecated, use either $DOTFILES or $OHMYZSH instead.'
