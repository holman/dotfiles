IMPORTS

import pandas as pd
#pd.set_option("display.notebook_repr_html", False)
pd.options.display.max_columns = None  # show all columns in head
import numpy as np
np.random.seed(1)
import matplotlib.pyplot as plt
%matplotlib inline
plt.rcParams['figure.facecolor'] = 'white'
import logging
logging.basicConfig(
    format="%(asctime)s "
        '%(levelname)s: '
        '%(funcName)s(): '
        '%(lineno)d:\t'
        '%(message)s',
    level=logging.INFO,
)


%load_ext autoreload
%autoreload 2


# LOGGING

import sys
import logging
logger = logging.getLogger()
logFormatter = logging.Formatter("%(asctime)s [%(name)40.40s] [%(funcName)10.10s] [%(levelname)-5.5s]  %(message)s")
logger.setLevel(logging.INFO)
                                                                                 
consoleHandler = logging.StreamHandler(sys.stdout)
consoleHandler.setFormatter(logFormatter)
logger.addHandler(consoleHandler)

SCATTER PLOT WITH COLOURS

import seaborn
fg = seaborn.FacetGrid(data=df, size=7, hue="run_consistency")
fg.map(plt.scatter, 'prob_hu', 'prob_st').add_legend()

PRINT LONG STRINGS
with pd.option_context('display.max_colwidth', 1000):

TURN OFF SCIENTIFIC NOTATION ON AXES
ax.ticklabel_format(style='plain')

LEGEND OUTSIDE AXIS
ax.legend(bbox_to_anchor=[1., 1.]).set_title('average latency')

PRINT WHOLE DF
with pd.option_context('display.max_rows', None, 'display.max_columns', None):
    display(df)

ROTATE XLABELS
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha='right')

HIST WITH LINE: histtype=u'step'
